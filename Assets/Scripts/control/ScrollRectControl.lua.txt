---------------------------------------------------------------------
local unity=CS.UnityEngine
ScrollRectControl={}
ScrollRectControl.needDispose={}
function init()
	avatarControl=unity.GameObject.Find("AvatarSystem"):GetComponent("AvatarControl")
	--ScrollRectControl.scrollRect=scrollRect:GetComponent("ScrollRect")
	--ScrollRectControl.listContent=listContent
	package.path=CS.UnityEngine.Application.dataPath.."/Scripts/model/?.lua"
	require("ScrollRectModel")
	ScrollRectControl.ScrollModel=ScrollRectModel
	ScrollRectControl.ScrollModel.setScrollControl(ScrollRectControl)
	ScrollRectControl.scrollRectView=self.gameObject:GetComponent("ScrollRectUIView")
	ScrollRectControl.loadAssets(1,3,80,0,"item")
	ScrollRectControl.setRecord()
end

--config the moduel
function ScrollRectControl.loadAssets(row1,col1,itemWidth1,chink1,prefabName)
	ScrollRectControl.item=unity.Resources.Load(prefabName)
	--self.scrollModel.item=ScrollRectControl.item
	ScrollRectControl.row=row1
	self.row=row1
	ScrollRectControl.col=col1
	self.col=col1
	ScrollRectControl.chink=chink1
	--self.chink=chink1
	ScrollRectControl.itemWidth=itemWidth1
	--self.scrollModel.itemWidth=itemWidth1
	self.itemSize=ScrollRectControl.getItemSize()
	ScrollRectControl.cell=ScrollRectControl.chink+ScrollRectControl.itemWidth
	self.cell=ScrollRectControl.cell
	--ScrollRectControl.isDragIng=false
	self.isDragIng=false
	ScrollRectControl.isLoadingRecord=false
	
	--self.isLoadingRecord=false
end

--config grid
function setRecordAndGrid()
	while ScrollRectControl.isLoadingRecord do
		coroutine.yield()
	end
	ScrollRectControl.isLoadingRecord=true
	local dat=avatarControl:getAllMeshNameOfPart(ScrollRectControl.scrollRectView.partName)
	local ddd={}
	for i = 0,dat.Count-1,1 do
		ddd[i]=dat[i]
	end
	ScrollRectControl.ScrollModel.setDatas(ddd)
	local count=ScrollRectControl.ScrollModel.getDatasLength()
	self.dataCount=count
	h=count/ScrollRectControl.col*ScrollRectControl.cell
	if count%ScrollRectControl.col~=0 then
		h=h+ScrollRectControl.cell
	end
	
	ScrollRectControl.scrollRectView:setContent(ScrollRectControl.col*ScrollRectControl.cell,h)
	--local rectTransform=ScrollRectControl.listContent:GetComponent("RectTransform")
	--rect=ScrollRectControl.listContent:GetComponent("RectTransform")
	
	local temCount
	if count>=ScrollRectControl.row*ScrollRectControl.col then
		temCount=ScrollRectControl.row*ScrollRectControl.col
	else
		temCount=count
	end
	
	for i = 0, temCount-1,1 do
		ScrollRectControl.ScrollModel.initItemRecord(i)
	end
	
	ScrollRectControl.isLoadingRecord=false
	
end
function ScrollRectControl.setRecord()
	ScrollRectControl.ScrollModel.clearRecord()
	ScrollRectControl.needDispose={}
	local ots=coroutine.create(setRecordAndGrid)
	coroutine.resume(ots)
end

function updateList(posY)
	local indexNowRow=getIndex(posY)
	local startNum=indexNowRow*ScrollRectControl.col
	local endNum=startNum+ScrollRectControl.row*ScrollRectControl.col
	ScrollRectControl.ScrollModel.removeUnUseItem(startNum,endNum)
	ScrollRectControl.ScrollModel.generaNewItem(startNum,endNum)
end

function ScrollRectControl.getItemSize()
	local size=CS.UnityEngine.Vector2(ScrollRectControl.itemWidth*2,ScrollRectControl.itemWidth*2)
	return size
end

function  ScrollRectControl.GnenerNewItem(index,itemName)
	local go=CS.UnityEngine.Object.Instantiate(ScrollRectControl.item,CS.UnityEngine.Vector3(0,0,0),CS.UnityEngine.Quaternion.identity)
	print("By new")
	ScrollRectControl.ScrollModel.addToDatasAndIndex(index,go)
	local size=ScrollRectControl.getItemSize()
	local pos=ScrollRectControl.getItemPosition(index)
	ScrollRectControl.scrollRectView:setRecordItem(index,go,itemName,size,pos)
end
function ScrollRectControl.SetNewItem(index,itemName)
	local go=ScrollRectControl.getNewItem()
	if go~=nil then
		--print("set a new item and needDisp length is ")
		--print(#ScrollRectControl.needDispose)
		print("by DisposeSentinel")
		ScrollRectControl.ScrollModel.addToDatasAndIndex(index,go)
		local size=ScrollRectControl.getItemSize()
		local pos=ScrollRectControl.getItemPosition(index)
		ScrollRectControl.scrollRectView:setRecordItem(index,go,itemName,size,pos)
	end
	
end

function ScrollRectControl.getNewItem()
	local gos
	if #ScrollRectControl.needDispose>0 then
		gos=ScrollRectControl.needDispose[1]
		table.remove(ScrollRectControl.needDispose)
		--print("use needdispose")
	--else
	--	gos=CS.UnityEngine.Object.Instantiate(ScrollRectControl.item,CS.UnityEngine.Vector3(0,0,0),CS.UnityEngine.Quaternion.identity)
	--	print("use init a new")
	end
	return  gos
end
function ScrollRectControl.RemoveItem(go)
	--print(go.name)
	table.insert(ScrollRectControl.needDispose,go)
	--ScrollRectControl.needDispose[#ScrollRectControl.needDispose]=go
	ScrollRectControl.scrollRectView:disableItem(go)
	--print("needDispose length")
	--print(#ScrollRectControl.needDispose)
end

function ScrollRectControl.getItemPosition(index)
	local x=(index%ScrollRectControl.col)*ScrollRectControl.cell+0.5*ScrollRectControl.cell
	local y=getPos_Y(index)
	local vt3=CS.UnityEngine.Vector3(x,y,0)
	return  vt3
end

function getPos_Y(index)
	local sizeY=index//ScrollRectControl.col*ScrollRectControl.cell
	sizeY=0-sizeY
	return sizeY
end

function getIndex(posY)
	local index=0
	index=posY//(ScrollRectControl.cell-10)
	if posY<0 then
		index=0
	end
	return index
end

init()
